{"version":3,"sources":["Posts.js","Pagination.js","App.js","index.js"],"names":["Posts","posts","className","map","item","id","title","Pagination","length","pagesize","selectednumber","activebutton","numberofpages","Math","ceil","pagenumber","i","push","display","onClick","class","App","useState","setPosts","setLength","selectedpage","setSelectedpage","setActivebutton","useEffect","a","axios","get","res","data","getposts","startPosition","endPosition","postTorender","slice","e","ReactDOM","render","document","getElementById"],"mappings":"+NAUeA,G,KARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACd,OACI,oBAAIC,UAAU,OAAd,SACED,EAAME,KAAI,SAAAC,GAAI,OAAI,qBAAiBF,UAAU,OAA3B,UAAkC,uBAAMA,UAAU,KAAhB,UAAsBE,EAAKC,GAA3B,OAAlC,IAA0ED,EAAKE,QAAtEF,EAAKC,WCiBzBE,EApBI,SAAC,GAKhB,IALoE,IAAnDC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,SAASC,EAAiC,EAAjCA,eAAeC,EAAkB,EAAlBA,aAG3CC,EAAgBC,KAAKC,KAAKN,EAAOC,GAChCM,EAAa,GACZC,EAAE,EAAGA,GAAGJ,EAAeI,IAC3BD,EAAWE,KAAKD,GAGpB,IAAME,EAASH,EAAWZ,KAAI,SAACC,GAAD,OAAQ,wBAAmBe,QAAS,kBAAIT,EAAeN,IACrFF,UAAWE,IAAOO,EAAe,YAAY,MADP,SAEpCP,GAFiDA,MAGrD,OACE,gCACE,sDACE,uCAAS,mBAAGgB,MAAM,iBAAT,2BAFb,KAEiEF,EAAQ,uCAAS,mBAAGE,MAAM,iBAAT,kC,iBCuBvEC,MAlCf,WAAgB,IAAD,EAEYC,mBAAS,IAFrB,mBAENrB,EAFM,KAECsB,EAFD,OAGeD,mBAAS,GAHxB,mBAGNd,EAHM,KAGEgB,EAHF,OAImBF,mBAAS,IAJ5B,mBAINb,EAJM,aAK2Ba,mBAAS,IALpC,mBAKNG,EALM,KAKQC,EALR,OAM2BJ,mBAAS,GANpC,mBAMNX,EANM,KAMQgB,EANR,KAQbC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACCC,IAAMC,IAAI,8CADX,OACXC,EADW,OAEjBT,EAASS,EAAIC,MACbT,EAAUQ,EAAIC,KAAKzB,QAHF,2CAAH,qDAKd0B,KACA,IACH,IAAMC,GAAiBV,EAAa,GAAGhB,EACjC2B,EAAcX,EAAahB,EAC3B4B,EAAepC,EAAMqC,MAAMH,EAAeC,GAI/C,OACE,sBAAKlC,UAAU,MAAf,UACA,4CACA,cAAC,EAAD,CAAOD,MAAQoC,IACf,cAAC,EAAD,CAAY7B,OAASA,EAAQC,SAAUA,EACvCC,eAPoB,SAAC6B,GAAKb,EAAgBa,GAAIZ,EAAgBY,IAQ9D5B,aAAcA,QC5BlB6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.75e45bf4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './App.css'\r\nconst Posts = ({posts}) => {\r\n  return (\r\n      <ul className='list'>\r\n       {posts.map(item =>(<li key={item.id}className='list'><span className='id'>{item.id} </span> {item.title}</li>))}\r\n      </ul>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n\r\n","import React from 'react'\r\n\r\nconst Pagination = ({length, pagesize,selectednumber,activebutton}) => {\r\n\r\n    \r\n    const numberofpages = Math.ceil(length/pagesize) \r\n     const pagenumber = []\r\n    for(let i=1; i<=numberofpages; i++){\r\n        pagenumber.push(i)\r\n    }\r\n\r\n    const display =pagenumber.map((item)=><button key={item} onClick={()=>selectednumber(item)}\r\n    className={item===activebutton ? 'activebtn':'btn'}\r\n    >{item}</button>)\r\n  return (\r\n    <div>\r\n      <h1>Pagination component</h1>\r\n        <button> <i class=\"material-icons\">arrow_back</i></button>  {display}<button> <i class=\"material-icons\">arrow_forward</i></button> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import {useEffect, useState} from 'react'\nimport './App.css';\nimport Posts from './Posts';\nimport Pagination from './Pagination';\nimport axios from 'axios'\n\nfunction App() {\n \n  const [posts, setPosts]= useState([])\n  const [length, setLength] = useState(1)\n  const [pagesize, setPagesize] = useState(10)\n  const [selectedpage, setSelectedpage] = useState(1)\n  const [activebutton, setActivebutton] = useState(1)\n  \n  useEffect(()=>{\n    const getposts = async()=>{\n    const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\n    setPosts(res.data)\n    setLength(res.data.length)\n    }\n    getposts()\n  },[])\n const startPosition = (selectedpage-1)*pagesize\n const endPosition = selectedpage*pagesize\n const postTorender = posts.slice(startPosition, endPosition)\n\n const selectednumber = (e)=>{setSelectedpage(e); setActivebutton(e)}\n\n  return (\n    <div className=\"App\">\n    <h1>List below</h1>\n    <Posts posts ={postTorender}/>\n    <Pagination length ={length} pagesize={pagesize} \n    selectednumber={selectednumber} \n    activebutton={activebutton}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}